/* Add your styles here, and they will be compiled down into the styles.css file. */
.hero {
	min-height: 50vh;
	padding-top: 148.922px !important;
	//Default Overlay
	&.default {
		.hero-image {
			&:before {
				background: -webkit-gradient(
					linear,
					left top,
					right top,
					from(var(--color-primary-500)),
					color-stop(70%, var(--color-secondary-500)),
					to(var(--color-secondary-300))
				);
				background: linear-gradient(
					to right,
					var(--color-primary-500) 0,
					var(--color-secondary-500) 70%,
					var(--color-secondary-300) 100%
				);
				content: "";
				display: block;
				height: 100%;
				opacity: 0.7;
				position: absolute;
				top: 0;
				width: 100%;
				z-index: 1;
			}
			&:after {
				background: linear-gradient(
					60deg,
					rgba(0, 0, 0, 0.6),
					rgba(0, 0, 0, 0) 60%
				);
				content: "";
				display: block;
				height: 100%;
				mix-blend-mode: multiply;
				//opacity: 0.8;
				position: absolute;
				top: 0;
				width: 100%;
				z-index: 1;
			}
		}
	}
	//Black Overlay
	&.bg-overlay-black {
		.hero-image {
			&:before {
				content: "";
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				background-color: rgb(0, 0, 0);
				z-index: 2;
			}
		}
		h1,
		h2,
		h3,
		h4,
		h5,
		h6,
		p {
			color: var(--color-white) !important;
		}
	}
	//Black Overlay
	&.bg-overlay-white {
		.hero-image {
			&:before {
				content: "";
				position: absolute;
				top: 0;
				left: 0;
				width: 100%;
				height: 100%;
				background-color: rgb(255, 255, 255);
				z-index: 2;
			}
		}
		h1,
		h2,
		h3,
		h4,
		h5,
		h6,
		p {
			color: var(--color-text) !important;
		}
	}

	.hero-image {
		height: 100%;
		position: absolute;
		top: 0;
		width: 100%;
		img {
			height: 100%;
			filter: grayscale(100%);
			object-fit: cover;

			object-position: center;
			width: 100%;
		}
	}

	& + section {
		z-index: 5;
	}
}
@for $i from 1 through 100 {
	@if $i % 10 == 0 {
		.overlay-opacity-#{$i}::after {
			opacity: $i * 0.01 !important;
		}
	}
}

.hero > .container {
	position: relative;
	z-index: 2;
}
@supports (aspect-ratio: 6/4) {
	.hero:before {
		aspect-ratio: 6 / 4;
	}
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~*
  HERO VIDEO
*~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/

.video-header {
	display: flex;
	position: relative;
	background-color: var(--color-black);
	height: 100%;
	min-height: 25rem;
	width: 100%;
	overflow: hidden;
	.video-title {
		position: relative;
		z-index: 2;
		text-align: center;
	}
	video {
		position: absolute;
		height: 100%;
		width: 100%;
		object-fit: cover;
		top: 0;
	}

	.embed-container {
		margin-bottom: 0 !important;
	}

	.play-button {
		display: flex;
		font-size: font-size(4);
		font-weight: 900;
		color: v(color-white);
		line-height: 1.2;
		.icon {
			margin-right: get-size(0.75);
			top: 0;
			width: 1.2em;
			height: 1.2em;
		}
		&:hover,
		&:focus {
			.icon {
				transform: scale(1.3);
			}
		}

		.icon-close {
			display: none;
		}
	}

	&.is-playing {
		padding: 0 !important;
		display: block !important;
		min-height: 0px !important;
		.icon-close {
			display: block;
		}
		.icon-play-circle {
			display: none;
		}
	}

	.play-button {
		color: var(--color-white);
		display: -webkit-box;
		display: -ms-flexbox;
		display: flex;
		font-size: 1.875em;
		font-weight: 700;
		line-height: 1.2;
		@media (min-width: 56.25em) {
			bottom: 2rem;
			position: absolute;
			right: 2rem;
			z-index: 5;
		}
	}
}
.hero-video-overlay {
	background-color: var(--color-primary-500);
	height: 100%;
	left: 0;
	opacity: 0.6;
	position: absolute;
	top: 0;
	width: 100%;
	z-index: 1;
}
.bg-overlay-white {
	.hero-video-overlay {
		background-color: var(--color-white);
	}
}
.bg-overlay-black {
	.hero-video-overlay {
		background-color: var(--color-black);
	}
}

@for $i from 1 through 100 {
	@if $i % 10 == 0 {
		.hero-video-overlay-opacity-#{$i} {
			opacity: $i * 0.01 !important;
		}
	}
}

.hero-video-full {
	display: none;
}

a.no-underline {
	text-decoration: none;
}
.hero-play-label {
	margin-left: 10px;
}
